"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[704],{18839:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"development/services/dhcp","title":"DHCP","description":"DHCP is powered by CoreDHCP. CoreDHCP is an extensible DHCP","source":"@site/docs/development/services/dhcp.md","sourceDirName":"development/services","slug":"/development/services/dhcp","permalink":"/pages/docs/development/services/dhcp","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Database","permalink":"/pages/docs/development/services/db"},"next":{"title":"DHCP Client","permalink":"/pages/docs/development/services/dhcp_client"}}');var r=t(74848),i=t(28453);const c={},o="DHCP",d={},p=[{value:"Tiny Subnets",id:"tiny-subnets",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dhcp",children:"DHCP"})}),"\n",(0,r.jsxs)(n.p,{children:["DHCP is powered by ",(0,r.jsx)(n.a,{href:"https://coredhcp.io/",children:"CoreDHCP"}),". CoreDHCP is an extensible DHCP\nclient and server purely written in golang."]}),"\n",(0,r.jsx)(n.p,{children:"SPR maintains a fork with one additional plugin:"}),"\n",(0,r.jsx)(n.h3,{id:"tiny-subnets",children:(0,r.jsx)(n.a,{href:"https://github.com/spr-networks/coredhcp/tree/master/plugins/tiny_subnets",children:"Tiny Subnets"})}),"\n",(0,r.jsx)(n.p,{children:"This plugin will call into the core API to get DHCP client addresses and options to assign."}),"\n",(0,r.jsx)(n.p,{children:"After receiving a DHCP request, it will query the API with the following parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"type DHCPRequest struct {\n\tMAC        string\n\tIdentifier string\n\tName       string\n\tIface      string\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"And the API will respond with IP, Router, DNS, and Lease time to construct a packet"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"type DHCPResponse struct {\n\tIP        string\n\tRouterIP  string\n\tDNSIP     string\n\tLeaseTime string\n}\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/spr-networks/super/tree/main/dhcp",children:" \u21e8 View the code"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(96540);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);