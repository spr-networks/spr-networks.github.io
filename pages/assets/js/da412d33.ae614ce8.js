"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[2370],{77810:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>d,toc:()=>a});var t=s(85893),r=s(11151);const c={},i="Dynamic DNS",d={id:"services/dyndns",title:"Dynamic DNS",description:"The DYNDNS plugin runs godns under a docker container,",source:"@site/docs/services/dyndns.md",sourceDirName:"services",slug:"/services/dyndns",permalink:"/pages/docs/services/dyndns",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DNS",permalink:"/pages/docs/services/dns"},next:{title:"Extensions",permalink:"/pages/docs/services/extensions"}},o={},a=[];function u(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dynamic-dns",children:"Dynamic DNS"})}),"\n",(0,t.jsxs)(n.p,{children:["The DYNDNS plugin runs ",(0,t.jsx)(n.a,{href:"https://github.com/TimothyYe/godns",children:"godns"})," under a docker container,\nunder the default docker bridge."]}),"\n",(0,t.jsx)(n.p,{children:"This plugin is dynamically started when enabled."}),"\n",(0,t.jsxs)(n.p,{children:["It can be configured under the ",(0,t.jsx)(n.code,{children:"Dynamic DNS"})," view when enabled."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/spr-networks/super/tree/main/dyndns",children:" \u21e8 View the code"})})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>i});var t=s(67294);const r={},c=t.createContext(r);function i(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);