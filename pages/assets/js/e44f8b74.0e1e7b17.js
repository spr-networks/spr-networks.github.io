"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[4348],{12425:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=s(85893),t=s(11151);const i={},o="Packet Logs",c={id:"services/packet_logs",title:"Packet Logs",description:"This service receives packets over NFLog netlink messages.",source:"@site/docs/services/packet_logs.md",sourceDirName:"services",slug:"/services/packet_logs",permalink:"/pages/docs/services/packet_logs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multicast UDP Proxy",permalink:"/pages/docs/services/multicast_proxy"},next:{title:"OUI & MAC Lookups",permalink:"/pages/docs/services/plugin_lookup"}},a={},l=[{value:"The Groups",id:"the-groups",level:2},{value:"Group 0",id:"group-0",level:3},{value:"wan",id:"wan",level:4},{value:"lan",id:"lan",level:4},{value:"wan",id:"wan-1",level:4},{value:"lan",id:"lan-1",level:4},{value:"Group 1 - Dropped packets",id:"group-1---dropped-packets",level:3},{value:"drop",id:"drop",level:4},{value:"drop",id:"drop-1",level:4},{value:"drop",id:"drop-2",level:4},{value:"drop",id:"drop-3",level:4},{value:"Inspecting packets",id:"inspecting-packets",level:2},{value:"Script to inspect traffic",id:"script-to-inspect-traffic",level:3}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"packet-logs",children:"Packet Logs"})}),"\n",(0,r.jsx)(n.p,{children:"This service receives packets over NFLog netlink messages."}),"\n",(0,r.jsxs)(n.p,{children:["The packet info is sent to the ",(0,r.jsx)(n.a,{href:"/pages/docs/services/sprbus",children:"sprbus"})," where clients subscribing to the ",(0,r.jsx)(n.em,{children:"nft"}),"-prefix gets notified. It's easier to talk to sprbus for packet inspection but also ",(0,r.jsx)(n.a,{href:"/pages/docs/services/packet_logs#inspecting-packets",children:"available by packet_logs"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Example"}),": The ",(0,r.jsx)(n.a,{href:"/pages/docs/services/db",children:"db service"})," can enable storage of logs by adding the topic to ",(0,r.jsx)(n.code,{children:"configs/db/config.json"})," under the ",(0,r.jsx)(n.em,{children:"SaveEvents"})," key."]}),"\n",(0,r.jsxs)(n.p,{children:["See also: ",(0,r.jsx)(n.a,{href:"/pages/docs/services/sprbus",children:"sprbus"})]}),"\n",(0,r.jsx)(n.h2,{id:"the-groups",children:"The Groups"}),"\n",(0,r.jsx)(n.h3,{id:"group-0",children:"Group 0"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'chain INPUT  { ...\n$(if [ "$WANIF" ]; then echo "iifname $WANIF log prefix \\"wan:in \\" group 0"; fi)\n$(if [ "$WANIF" ]; then echo "iifname ne $WANIF log prefix \\"lan:in \\" group 0"; else echo "log prefix \\"lan:in \\" group 0"; fi)\n\n}\n\nchain FORWARD { ...\n\n$(if [ "$WANIF" ]; then echo "oifname $WANIF log prefix \\"wan:out \\" group 0"; fi)\n$(if [ "$WANIF" ]; then echo "oifname ne $WANIF log prefix \\"lan:out \\" group 0"; else echo "log prefix \\"lan:out \\" group 0"; fi)\n'})}),"\n",(0,r.jsx)(n.p,{children:"}"}),"\n",(0,r.jsxs)(n.h4,{id:"wan",children:["wan",":in"]}),"\n",(0,r.jsx)(n.p,{children:"Input from the upstream interface ($WANIF)"}),"\n",(0,r.jsxs)(n.h4,{id:"lan",children:["lan",":in"]}),"\n",(0,r.jsx)(n.p,{children:"Input from all other devices (wireguard, wireless clients, wired devices)"}),"\n",(0,r.jsxs)(n.h4,{id:"wan-1",children:["wan",":out"]}),"\n",(0,r.jsx)(n.p,{children:"Packets forwarded upstream to the internet over the $WANIF interface"}),"\n",(0,r.jsxs)(n.h4,{id:"lan-1",children:["lan",":out"]}),"\n",(0,r.jsx)(n.p,{children:"Packets forwaded to any other non-upstream interface"}),"\n",(0,r.jsx)(n.h3,{id:""}),"\n",(0,r.jsx)(n.h3,{id:"group-1---dropped-packets",children:"Group 1 - Dropped packets"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'log prefix "drop:private " group 1\ncounter log prefix "drop:forward " group 1\ncounter log prefix "drop:input " group 1\nlog prefix "drop:mac " group 1\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"drop",children:["drop",":private"]}),"\n",(0,r.jsx)(n.p,{children:"This prefix marks packets that were dropped because they were headed upstream\nto a private network address, but blocked from doing so because they were not\nin a permitted group"}),"\n",(0,r.jsxs)(n.h4,{id:"drop-1",children:["drop",":forward"]}),"\n",(0,r.jsx)(n.p,{children:"Packets that were dropped during forward"}),"\n",(0,r.jsxs)(n.h4,{id:"drop-2",children:["drop",":input"]}),"\n",(0,r.jsx)(n.p,{children:"Input packets into SPR that were dropped"}),"\n",(0,r.jsxs)(n.h4,{id:"drop-3",children:["drop",":mac"]}),"\n",(0,r.jsx)(n.p,{children:"Packets that were dropped because of an strict MAC filtering in\nthe INPUT chain in the FORWARD chain."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/spr-networks/super/tree/main/packet_logs",children:" \u21e8 View the code"})}),"\n",(0,r.jsx)(n.h2,{id:"inspecting-packets",children:"Inspecting packets"}),"\n",(0,r.jsx)(n.p,{children:"Retrieve JSON packet logs on SPR with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker exec -it superpacket_logs /stream-json-logs > log.json\n"})}),"\n",(0,r.jsxs)(n.p,{children:["will log packets for 20 seconds, can specify with ",(0,r.jsx)(n.code,{children:"-timeout"})," flag."]}),"\n",(0,r.jsxs)(n.p,{children:["Packets can be inspected with ",(0,r.jsx)(n.code,{children:"jq"}),", see following section for fields. Raw data is available and base64 encoded."]}),"\n",(0,r.jsx)(n.h3,{id:"script-to-inspect-traffic",children:"Script to inspect traffic"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"packetlogs",src:s(86799).Z+"",width:"1200",height:"600"})}),"\n",(0,r.jsxs)(n.p,{children:["Example script with ",(0,r.jsx)(n.a,{href:"https://github.com/charmbracelet/gum",children:"gum"})," - a tool for glamorous shell scripts."]}),"\n",(0,r.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"apt install jq\ngo install github.com/charmbracelet/gum@latest\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/sh\n# packet_logs json stream build if not running on spr:\n# cd packet_logs/stream-json-logs && go build -o stream\n# ./stream > log.json\nF="$PWD/log.json"\nF_CSV="${F}.csv"\nBIN_STREAM="docker exec -it superpacket_logs /stream-json-logs"\n\nlog_stream() {\n    gum spin -s moon --title "Logging traffic... 20s" -- sh -c "$BIN_STREAM > $F"\n}\n\ntable() {\nF_UDP=\'[.Timestamp,"UDP",.Prefix, ([.IP.SrcIP,.UDP.SrcPort|tostring]|join(":")), ([.IP.DstIP,.UDP.DstPort|tostring]|join(":"))]\'\nF_TCP=\'[.Timestamp,"TCP",.Prefix, ([.IP.SrcIP,.TCP.SrcPort|tostring]|join(":")), ([.IP.DstIP,.TCP.DstPort|tostring]|join(":"))]\'\n\ncat "$F" \\\n    | jq -r -c "if .UDP!=null then $F_UDP elif .TCP!=null then $F_TCP else empty end | @csv" \\\n    | sed \'s/"//g\' > "$F_CSV"\n\nIS_TABLE=0\n\nif [ $IS_TABLE -eq 1 ]; then\n    SEL_ROW=$(gum table -c "ts, proto, prefix, src, dst" -w 30,8,10,20,20 --height 20 -f "$F_CSV")\nelse\n    SEL_ROW=$(cat "$F_CSV" \\\n        | sed \'s/,/ /g\' \\\n        | gum filter --no-fuzzy --indicator.foreground="99" --match.foreground="99" --height 20)\nfi\n\nSEL_TS=$(echo $SEL_ROW|sed \'s/,/\\t/g\'|awk \'{print $1}\')\n\nif [ -z "$SEL_TS" ]; then\n    exit\nfi\n\nSEL_JSON=$(cat "$F" | jq "select(.Timestamp == \\"$SEL_TS\\")")\n\necho "$SEL_JSON" | gum pager\n}\n\ngum style --foreground 99 --border double --border-foreground 99 --padding "0 4" --margin 1 "SPR packet logs cli"\ngum input --placeholder="Press ENTER to start"\n\nif [ ! -f "$F" ]; then\n    log_stream\nfi\n\nwhile true; do table; done\n'})}),"\n",(0,r.jsx)(n.p,{children:"save the script in packetlogs.sh and run it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./packetlogs.sh\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},86799:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/packet-logs-3b9ad3129504aea6baa792bde0fa93e7.gif"},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>o});var r=s(67294);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);