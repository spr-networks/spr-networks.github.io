"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[9641],{33098:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=t(85893),s=t(11151);const a={slug:"macos-smb-flaws",title:"SMB Flaws in macOS",authors:["ltsrad","daveg"],tags:["smb","fuzzing","macos","apple"]},l=void 0,o={permalink:"/pages/blog/macos-smb-flaws",source:"@site/blog/2025-07-01-smblient.md",title:"SMB Flaws in macOS",description:"Supernetworks macOS SMB Client Vulnerabilities",date:"2025-07-01T00:00:00.000Z",tags:[{inline:!0,label:"smb",permalink:"/pages/blog/tags/smb"},{inline:!0,label:"fuzzing",permalink:"/pages/blog/tags/fuzzing"},{inline:!0,label:"macos",permalink:"/pages/blog/tags/macos"},{inline:!0,label:"apple",permalink:"/pages/blog/tags/apple"}],readingTime:2.535,hasTruncateMarker:!0,authors:[{name:"Alex Radocea",url:"https://twitter.com/defendtheworld",key:"ltsrad",page:null},{name:"Dave G",key:"daveg",page:null}],frontMatter:{slug:"macos-smb-flaws",title:"SMB Flaws in macOS",authors:["ltsrad","daveg"],tags:["smb","fuzzing","macos","apple"]},unlisted:!1,prevItem:{title:"Identity Is A Bitchat Challenge (MITM Flaw)",permalink:"/pages/blog/agentic-insecurity-vibes-on-bitchat"},nextItem:{title:"We've Added Guest SSID Support",permalink:"/pages/blog/guest-ssid-on-spr"}},r={authorsImageUrls:[void 0,void 0]},c=[{value:"What to Know",id:"what-to-know",level:2},{value:"Executive Summary",id:"executive-summary",level:3},{value:"CVE-2025-24269",id:"cve-2025-24269",level:3},{value:"Other vulnerabilities",id:"other-vulnerabilities",level:3},{value:"Related Work",id:"related-work",level:2},{value:"Remediation",id:"remediation",level:3},{value:"Technical Details",id:"technical-details",level:3}];function d(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Supernetworks macOS SMB Client Vulnerabilities"}),"\n",(0,i.jsx)(n.h2,{id:"what-to-know",children:"What to Know"}),"\n",(0,i.jsxs)(n.p,{children:["Supernetworks identified several vulnerabilities in macOS Sequoia\u2019s SMB client code.",(0,i.jsx)(n.br,{}),"\n","The worst of which can result in remote kernel code execution via an SMB URL delivered through any application that allows clickable URLs (e.g. messaging apps. Browsers, email client).  This isn\u2019t necessarily a one click attack, as a user may need to click through some UI elements to trigger the exploit. A privileged network position could also be used to carry out a man-in-the-middle attack against a user that typically uses SMB shares. It goes without saying that this also operates as a local privilege escalation from a non privileged user to kernel code execution."]}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("video",{width:"100%",height:"100%",playsInline:!0,controls:!0,src:"/pages/video/blogs/smbclient/2025-03-31-smbclient.mov",type:"video/mp4"})}),"\n",(0,i.jsx)(n.h3,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,i.jsx)(n.p,{children:"SMBClient is the codebase responsible for handling file sharing connections to remote file servers.  This codebase contains a mix of userland and kernel code to allow users to mount Windows and macOS file servers.  A significant portion of the SMB protocol management occurs exclusively in the smbfs kernel extension, which in turn means that SMB represents a kernel attack surface to attackers."}),"\n",(0,i.jsx)(n.p,{children:"While iOS does have SMB support via Files.app, it does not appear to be impacted by any of these vulnerabilities and implements some portion of SMB in userland in addition to not supporting the compression feature."}),"\n",(0,i.jsx)(n.h3,{id:"cve-2025-24269",children:"CVE-2025-24269"}),"\n",(0,i.jsxs)(n.p,{children:["This vulnerability is due to a heap overflow within the smb compression code, where an untrusted length value is read from the server and never validated. The flaw relates to the same part of the protocol implementation flaw that affected SMBGhost ",(0,i.jsx)(n.a,{href:"https://nvd.nist.gov/vuln/detail/cve-2020-0796",children:"(CVE-2020-0796)"})," Windows vulnerability."]}),"\n",(0,i.jsx)(n.p,{children:"CVE-2025-24269 is also the kind of flaw an LLM happens to be decent at discovering. The commented out code path has a helpful prompt stating developer exasperation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'#if 0\n                    /*\n                     * Oddly, Windows server will send a compress length that\n                     * is bigger than the decompressed length which will cause\n                     * this check to fail. Why they dont just send the non\n                     * compressed data?\n                     *\n                     * Sanity check the compress length\n                     */\n                    if (compress_len > (originalCompressedSegmentSize - CurrentDecompressedDataSize)) {  [2]\n                        SMBERROR("Algorithm %d compress_len %d > remaining to decompress len %d? \\n",\n                                 algorithm, compress_len,\n                                 (originalCompressedSegmentSize - CurrentDecompressedDataSize));\n                        error = EINVAL;\n                        goto bad;\n                    }\n#endif\u2028\u2026\n'})}),"\n",(0,i.jsx)(n.p,{children:"As the buffer is in a data zone, exploitation will require finding kernel space data buffers worth corrupting remotely, or a bypass of Apple's heap zone hardening countermeasures."}),"\n",(0,i.jsx)(n.h3,{id:"other-vulnerabilities",children:"Other vulnerabilities"}),"\n",(0,i.jsx)(n.p,{children:"Our testing also uncovered:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"KerberosHelper: Remote _asn1_free() on uninitialized stack variable in _KRBDecodeNegTokenInit (CVE-2025-24235)"}),"\n",(0,i.jsx)(n.li,{children:"Smbfs.kext: Session_list corruption via smb_sm_lookupint (CVE-2025-30444)"}),"\n",(0,i.jsx)(n.li,{children:"Smbfs.kext: Unprivileged SIGTERM via SMBIOC_UPDATE_NOTIFIER_PID (No CVE)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-work",children:"Related Work"}),"\n",(0,i.jsxs)(n.p,{children:["On Linux Doyensec found a substantial series of flaws with ",(0,i.jsx)(n.a,{href:"https://blog.doyensec.com/2025/01/07/ksmbd-1.html",children:"ksmbd"}),",\nwhich Sean Heelan has also been using to ",(0,i.jsx)(n.a,{href:"https://sean.heelan.io/2025/05/22/how-i-used-o3-to-find-cve-2025-37899-a-remote-zeroday-vulnerability-in-the-linux-kernels-smb-implementation/",children:"evaluate o3 and other LLM's bug finding abilities"}),". After SMBleed and SMBGhost, ",(0,i.jsx)(n.a,{href:"https://www.synacktiv.com/en/publications/ntlm-reflection-is-dead-long-live-ntlm-reflection-an-in-depth-analysis-of-cve-2025",children:"more flaws"})," keep popping up in Microsoft's implementation as well."]}),"\n",(0,i.jsx)(n.h3,{id:"remediation",children:"Remediation"}),"\n",(0,i.jsxs)(n.p,{children:["These issues were fixed in ",(0,i.jsx)(n.a,{href:"https://support.apple.com/en-us/122373",children:"macOS 15.4"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"technical-details",children:"Technical Details"}),"\n",(0,i.jsx)(n.p,{children:"The technical details for these vulnerabilities can be found at:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.supernetworks.org/advisories/smbclient-2025.html",children:"https://www.supernetworks.org/advisories/smbclient-2025.html"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var i=t(67294);const s={},a=i.createContext(s);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);