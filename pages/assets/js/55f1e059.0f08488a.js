"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[5059],{17712:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>n,metadata:()=>c,toc:()=>i});var r=s(85893),o=s(11151);const n={},a="Database",c={id:"development/services/db",title:"Database",description:"The database service is powered by bolt.",source:"@site/docs/development/services/db.md",sourceDirName:"development/services",slug:"/development/services/db",permalink:"/pages/docs/development/services/db",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Base",permalink:"/pages/docs/development/services/base"},next:{title:"DHCP",permalink:"/pages/docs/development/services/dhcp"}},d={},i=[];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"database",children:"Database"})}),"\n",(0,r.jsxs)(t.p,{children:["The database service is powered by ",(0,r.jsx)(t.a,{href:"https://pkg.go.dev/github.com/boltdb/bolt",children:"bolt"}),"."]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"Bolt is a pure Go key/value store inspired by Howard Chu's LMDB project. The goal of the project is to provide a simple, fast, and reliable database for projects that don't require a full database server such as Postgres or MySQL.\""}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["The API communicates with SPR over a unix socket, located at ",(0,r.jsx)(t.code,{children:"state/plugins/db/socket"})," and is ",(0,r.jsx)(t.a,{href:"/api/0#tag/db",children:"documented here"}),"."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/spr-networks/super/tree/main/db",children:" \u21e8 View the code"})})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>a});var r=s(67294);const o={},n=r.createContext(o);function a(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);