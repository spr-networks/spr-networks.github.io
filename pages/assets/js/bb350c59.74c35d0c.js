"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[7658],{28453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>a});var i=s(96540);const t={},l=i.createContext(t);function o(n){const e=i.useContext(l);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),i.createElement(l.Provider,{value:e},n.children)}},29026:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/extensions-plugin-051105bcdda3d5dd72926a43169a94c3.png"},45303:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/plugins","title":"Installing Plugins","description":"Plugins are a mechanism to integrate additional containers running on the same device with SPR\'s API and UI.","source":"@site/docs/guides/plugins.md","sourceDirName":"guides","slug":"/guides/plugins","permalink":"/pages/docs/guides/plugins","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Updating SPR","permalink":"/pages/docs/guides/updating"},"next":{"title":"Logs and Events","permalink":"/pages/docs/guides/logs"}}');var t=s(74848),l=s(28453);const o={sidebar_position:9},a="Installing Plugins",r={},d=[{value:"Community Plugins",id:"community-plugins",level:3},{value:"Plugin Installation",id:"plugin-installation",level:3},{value:"Auto-starting a plugin",id:"auto-starting-a-plugin",level:3}];function c(n){const e={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"installing-plugins",children:"Installing Plugins"})}),"\n",(0,t.jsx)(e.p,{children:"Plugins are a mechanism to integrate additional containers running on the same device with SPR's API and UI.\nMany of the built-in containers are deployed as plugins, and third party plugins are fully supported."}),"\n",(0,t.jsx)(e.p,{children:"Note: we plan to streamline plugin installation in a future release."}),"\n",(0,t.jsx)(e.h3,{id:"community-plugins",children:"Community Plugins"}),"\n",(0,t.jsxs)(e.p,{children:["See the ",(0,t.jsx)(e.a,{href:"https://github.com/spr-networks/curated-super-plugins",children:"curated plugin list"})]}),"\n",(0,t.jsx)(e.h3,{id:"plugin-installation",children:"Plugin Installation"}),"\n",(0,t.jsxs)(e.p,{children:["A plugin can be enabled by navigating to the Plugins page and selecting ",(0,t.jsx)(e.code,{children:"Add Plugin"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"extensions-plugin",src:s(29026).A+"",width:"2642",height:"2042"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Name"}),": this is the plugin name"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"URI"}),": This is used when the plugin extends the SPR API with additional API calls."]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Ex: specifying ",(0,t.jsx)(e.code,{children:"nexmon"})," means that the API calls the plugin adds will be reachable under ",(0,t.jsx)(e.code,{children:"http://spr/plugins/nexmon"})]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"UNIX Path"}),": This is the API's path to the unix socket the plugin provides"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Ex: ",(0,t.jsx)(e.code,{children:"/state/plugins/nexmon/socket"})]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"ComposeFilePath"}),": This is the relative path to the docker compose path, so SPR auto-starts the plugin"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Ex: ",(0,t.jsx)(e.code,{children:"plugins/spr-nexmon/docker-compose.yml"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Note"})," Currently ",(0,t.jsx)(e.code,{children:"configs/base/custom_compose_paths.json"})," also needs to be updated to allow this path."]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"auto-starting-a-plugin",children:"Auto-starting a plugin"}),"\n",(0,t.jsx)(e.p,{children:"For now, a strict whitelist is used to determine which compose file paths to run. To add your plugin to the whitelist, update:"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.code,{children:"configs/base/custom_compose_paths.json"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Example","\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'["plugins/spr-nexmon/docker-compose.yml", "plugins/test/docker-compose.yml.yml"]\n'})}),"\n","`"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}}}]);