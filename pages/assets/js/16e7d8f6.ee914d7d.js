"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[5166],{1317:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/plus-site-vpn-view-486bce6a0f0fbcaa2c4460fd37ad5eab.png"},24685:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/plus-pfw-forward-site-flow-ded57ee3508d881406089afea79c3c89.png"},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},65737:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"guides/guides_plus/sitevpn","title":"Site VPN","description":"The PFW plugin from PLUS  adds support for Site VPN Destinations with Wireguard.","source":"@site/docs/guides/guides_plus/sitevpn.md","sourceDirName":"guides/guides_plus","slug":"/guides/guides_plus/sitevpn","permalink":"/pages/docs/guides/guides_plus/sitevpn","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PFW Programmable Firewall","permalink":"/pages/docs/guides/guides_plus/pfw"},"next":{"title":"Overview","permalink":"/pages/docs/development/overview"}}');var s=i(74848),r=i(28453);const a={},c="Site VPN",d={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Routing Traffic",id:"routing-traffic",level:2},{value:"DNS Split Tunnel",id:"dns-split-tunnel",level:4},{value:"Verifying connectivity",id:"verifying-connectivity",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"site-vpn",children:"Site VPN"})}),"\n",(0,s.jsx)(n.p,{children:"The PFW plugin from PLUS  adds support for Site VPN Destinations with Wireguard."}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Once PFW is enabled, a new menu should appear under the VPN view."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"plus-site-vpn-view",src:i(1317).A+"",width:"2664",height:"1266"})}),"\n",(0,s.jsxs)(n.p,{children:["Next, fill out the wireguard details. The 'Interface Address' should be the Peer IP for SPR\nthat the remote wireguard has assigned.\n",(0,s.jsx)(n.img,{alt:"plus-site-vpn-config",src:i(67316).A+"",width:"2666",height:"1962"})]}),"\n",(0,s.jsx)(n.h2,{id:"routing-traffic",children:"Routing Traffic"}),"\n",(0,s.jsxs)(n.p,{children:["Next, we can use the ",(0,s.jsx)(n.code,{children:"PFW"})," extension to create Policy rules that redirect traffic over the site interface."]}),"\n",(0,s.jsxs)(n.p,{children:["Select the ",(0,s.jsx)(n.code,{children:"Forward all traffic to ...Site VPN or Uplink"})," action\n",(0,s.jsx)(n.img,{alt:"plus-site-forward-site-flow1",src:i(24685).A+"",width:"2670",height:"1940"})]}),"\n",(0,s.jsxs)(n.p,{children:["Fill out the parameters, selecting the Client/Group/Tag to apply the rule to.\nSelect the ",(0,s.jsx)(n.code,{children:"site0"})," destination itnerface. The ",(0,s.jsx)(n.code,{children:"destination"})," can be left blank for Site VPNs."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"plus-site-forward-site-flow3",src:i(93798).A+"",width:"2666",height:"1158"})}),"\n",(0,s.jsx)(n.p,{children:"Now outbound traffic from the selected device will go out over the Site VPN."}),"\n",(0,s.jsx)(n.h4,{id:"dns-split-tunnel",children:"DNS Split Tunnel"}),"\n",(0,s.jsx)(n.p,{children:"Note that DNS request still go through the main router DNS service. In a future release, a parameter will be available to also route DNS queries through the Site VPN."}),"\n",(0,s.jsx)(n.h3,{id:"verifying-connectivity",children:"Verifying connectivity"}),"\n",(0,s.jsx)(n.p,{children:"In an upcoming release, status will be visibile in the UI. For now, users can run the following command on SPR"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it superwireguard wg show\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"interface: wg0\n  public key: PUBKEYPUBKEY=\n  private key: (hidden)\n  listening port: 51280\n\ninterface: site0\n  public key: PUBKEYPUBKEY=\n  private key: (hidden)\n  listening port: 52538\n\npeer: PEERPUBKEYPUBKEY=\n  preshared key: (hidden)\n  endpoint: 1.2.3.4:51280\n  allowed ips: 0.0.0.0/0\n  latest handshake: 11 seconds ago\n  transfer: 272.20 MiB received, 50.05 MiB sent\n"})}),"\n",(0,s.jsxs)(n.p,{children:["And check that the ",(0,s.jsx)(n.code,{children:"site0"})," interface has the correct peer IP"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -it superwireguard ip -br addr show site0\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"site0            UNKNOWN        192.168.241.2/32\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},67316:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/plus-site-vpn-config-a13b9265dc465cfd49a3ebe525c3fdb4.png"},93798:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/plus-pfw-forward-site-4d845ce23ebfbb910a1522c9e01ecc1d.png"}}]);