"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[53],{54061:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(85893),o=n(11151);const s={slug:"spr-mitmproxy",title:"Transparent Socket Forwarding with SPR and MITMProxy",authors:"ltsrad",tags:["mitmproxy","microsegmentation","transparent sockets","PLUS"]},i=void 0,a={permalink:"/pages/blog/spr-mitmproxy",source:"@site/blog/2023-11-14-mitmproxy.md",title:"Transparent Socket Forwarding with SPR and MITMProxy",description:"Update",date:"2023-11-14T00:00:00.000Z",tags:[{inline:!0,label:"mitmproxy",permalink:"/pages/blog/tags/mitmproxy"},{inline:!0,label:"microsegmentation",permalink:"/pages/blog/tags/microsegmentation"},{inline:!0,label:"transparent sockets",permalink:"/pages/blog/tags/transparent-sockets"},{inline:!0,label:"PLUS",permalink:"/pages/blog/tags/plus"}],readingTime:1.945,hasTruncateMarker:!0,authors:[{name:"Alex Radocea",url:"https://twitter.com/defendtheworld",key:"ltsrad",page:null}],frontMatter:{slug:"spr-mitmproxy",title:"Transparent Socket Forwarding with SPR and MITMProxy",authors:"ltsrad",tags:["mitmproxy","microsegmentation","transparent sockets","PLUS"]},unlisted:!1,prevItem:{title:"Loading an nzyme tap on SPR",permalink:"/pages/blog/spr-nzyme-tap"},nextItem:{title:"Loading up nexmon on a RPI4 with SPR",permalink:"/pages/blog/spr-nexmon"}},p={authorsImageUrls:[void 0]},l=[{value:"Update",id:"update",level:2},{value:"Overview",id:"overview",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"update",children:"Update"}),"\n",(0,r.jsxs)(t.p,{children:["This post has become a guide which is being kept up to date, ",(0,r.jsx)(t.a,{href:"/pages/docs/guides_plus/mitmproxy",children:"check it out!"})]}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(t.p,{children:["In this post we'll show how PLUS members can add a ",(0,r.jsx)(t.code,{children:"mitmproxy"})," plugin to their SPR setup,\nand then use the ",(0,r.jsx)(t.a,{href:"https://www.supernetworks.org/plus.html",children:"Programmable Firewall (PFW)"})," plugin to redirect traffic through ",(0,r.jsx)(t.code,{children:"mitmproxy"})," with DNAT forwarding."]}),"\n",(0,r.jsxs)(t.p,{children:["We do not need to configure our clients with proxy settings to point to ",(0,r.jsx)(t.code,{children:"mitmproxy"}),", or rewrite DNS responses,\nsince we are using the PFW feature to do the redirection."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/spr-networks/spr-mitmproxy",children:"This plugin is available on github."})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var r=n(67294);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);