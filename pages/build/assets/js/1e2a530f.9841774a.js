"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[9910],{71466:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var r=n(85893),o=n(11151);const i={},t="Docker Tips & Tricks",c={id:"development/contribute/docker-dev",title:"Docker Tips & Tricks",description:"SPR runs inside of containers. It can run a network inside of a network namespace,",source:"@site/docs/development/contribute/docker-dev.md",sourceDirName:"development/contribute",slug:"/development/contribute/docker-dev",permalink:"/pages/docs/development/contribute/docker-dev",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SSL Support",permalink:"/pages/docs/development/apis/ssl_support"},next:{title:"Testing",permalink:"/pages/docs/development/contribute/testing"}},d={},a=[{value:"Virtual mode",id:"virtual-mode",level:4},{value:"Updating  from the command line",id:"updating--from-the-command-line",level:4},{value:"Listing running containers",id:"listing-running-containers",level:4},{value:"Viewing logs",id:"viewing-logs",level:4},{value:"Entering a container",id:"entering-a-container",level:4},{value:"Release Channels",id:"release-channels",level:3},{value:"Starting plugins without the <code>api/superd</code>",id:"starting-plugins-without-the-apisuperd",level:3},{value:"Building super",id:"building-super",level:3},{value:"Building with low system memory",id:"building-with-low-system-memory",level:4}];function l(e){const s={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"docker-tips--tricks",children:"Docker Tips & Tricks"})}),"\n",(0,r.jsx)(s.p,{children:"SPR runs inside of containers. It can run a network inside of a network namespace,\nor with the host network namespace. Here are some useful things to know"}),"\n",(0,r.jsx)(s.h4,{id:"virtual-mode",children:"Virtual mode"}),"\n",(0,r.jsx)(s.p,{children:"Super ships with 3 docker compose files"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"docker-compose.yml"})," the default for running SPR on the host network"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"docker-compose-virt.yml"})," for running SPR in virtual bridge, for example for a cloud VPN"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"docker-compose-test.yml"})," for running the end to end tests"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"If using SPR in virtual mode, make sure to use the virtual compose file."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"docker compose -f docker-compose-virt.yml up -d\n"})}),"\n",(0,r.jsx)(s.h4,{id:"updating--from-the-command-line",children:"Updating  from the command line"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"sudo -s\ncd /home/spr/super/\ndocker compose pull\ndocker compose up -d\n"})}),"\n",(0,r.jsx)(s.h4,{id:"listing-running-containers",children:"Listing running containers"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"docker ps\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'root@haxlab0:/home/spr/super# docker ps\nCONTAINER ID   IMAGE                                                   COMMAND                  CREATED          STATUS                  PORTS     NAMES\nad9f3a4aa353   ghcr.io/spr-networks/super_wifid:latest                 "/bin/sh -c /scripts\u2026"   17 seconds ago   Up Less than a second             superwifid\ne509fed11404   ghcr.io/spr-networks/super_wireguard:latest             "/scripts/startup.sh"    28 seconds ago   Up 1 second                       superwireguard\n5b0cec25f671   ghcr.io/spr-networks/super_multicast_udp_proxy:latest   "/scripts/startup.sh"    28 seconds ago   Up 2 seconds                      super_multicast_udp_proxy\n746c2599eb42   ghcr.io/spr-networks/super_db:latest                    "/scripts/startup.sh"    28 seconds ago   Up 2 seconds                      superdb\n63c30c8dbc83   ghcr.io/spr-networks/super_plugin-lookup:latest         "/scripts/startup.sh"    28 seconds ago   Up 2 seconds                      superplugin-lookup\n8c54ec9f1769   ghcr.io/spr-networks/super_api:latest                   "/scripts/startup.sh"    39 seconds ago   Up 4 seconds                      superapi\na1679ce36ca4   ghcr.io/spr-networks/super_dhcp:latest                  "/scripts/startup.sh"    39 seconds ago   Up 4 seconds                      superdhcp\na69a08569bd8   ghcr.io/spr-networks/super_dhcp_client:latest           "/scripts/client.sh"     39 seconds ago   Up 4 seconds                      superdhcp_client\n4ca730f9cf84   ghcr.io/spr-networks/super_dns:latest                   "/bin/sh -c /scripts\u2026"   39 seconds ago   Up 4 seconds                      superdns\nd5ff0bd8d40d   ghcr.io/spr-networks/super_base:latest                  "/bin/sh -c /scripts\u2026"   50 seconds ago   Up 5 seconds                      superbase\nfc8006db1370   ghcr.io/spr-networks/super_superd:latest                "/scripts/startup.sh"    50 seconds ago   Up 5 seconds                      superd\ne58a351190b1   ghcr.io/spr-networks/super_packet_logs:latest           "/scripts/startup.sh"    50 seconds ago   Up 5 seconds                      superpacket_logs\n8a94e9476931   spr-nexmon-nexmon                                       "/scripts/startup.sh"    4 weeks ago      Up 3 days                         supernexmon\n\n'})}),"\n",(0,r.jsx)(s.h4,{id:"viewing-logs",children:"Viewing logs"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"docker compose logs -f wifid\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"root@haxlab0:/home/spr/super# docker compose logs -f wifid\nsuperwifid  |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\nsuperwifid  |                                  Dload  Upload   Total   Spent    Left  Speed\n100     6  100     6    0     0     65      0 --:--:-- --:--:-- --:--:--    65\nsuperwifid  | wlan1: interface state UNINITIALIZED->COUNTRY_UPDATE\nsuperwifid  | wlan1: interface state COUNTRY_UPDATE->HT_SCAN\n\n"})}),"\n",(0,r.jsx)(s.h4,{id:"entering-a-container",children:"Entering a container"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"docker exec -it superapi bash\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"root@haxlab0:/# ip -br addr\nlo               UNKNOWN        127.0.0.1/8 ::1/128\neth0             UP             192.168.2.218/30 fe80::e65f:1ff:fefd:a175/64\nwlan1            UP             fe80::9618:65ff:fe55:54ae/64\ntailscale0       UNKNOWN        fe80::31cf:a08b:d7e0:47e4/64\ndocker0          DOWN           172.17.0.1/16 fe80::42:1ff:fea3:7057/64\ntailscale        DOWN           172.18.0.1/16\nmon0             DOWN           \nwlan0            UNKNOWN        \nsprloop          UNKNOWN        192.168.200.1/32 fe80::6416:d1ff:fe70:bf2a/64\nwg0              UNKNOWN        \nroot@haxlab0:/#\n"})}),"\n",(0,r.jsx)(s.h3,{id:"release-channels",children:"Release Channels"}),"\n",(0,r.jsxs)(s.p,{children:["Want to test the dev branch? Don't want to build it? You can use the ",(0,r.jsx)(s.code,{children:"-dev"})," RELEASE_CHANNEL"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"export RELEASE_CHANNEL=-dev\ndocker compose pull\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"starting-plugins-without-the-apisuperd",children:["Starting plugins without the ",(0,r.jsx)(s.code,{children:"api/superd"})]}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"SUPDERDIR"})," path is required to let docker compose know where the state and config directories are."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"export SUPERDIR=/home/spr/super/\ndocker compose -f plugins/plugin/docker-compose.yml up -d\n"})}),"\n",(0,r.jsx)(s.h3,{id:"building-super",children:"Building super"}),"\n",(0,r.jsxs)(s.p,{children:["For convenience, we provide a script, ",(0,r.jsx)(s.code,{children:"build_docker_compose.sh"})," that will build the containers."]}),"\n",(0,r.jsx)(s.h4,{id:"building-with-low-system-memory",children:"Building with low system memory"}),"\n",(0,r.jsx)(s.p,{children:"To speed up the build a ramdisk is used from docker's buildkit. If that's not possible, consider disabling that capability"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'./build_docker_compose.sh --set "*.args.USE_TMPFS=false " --load\n'})})]})}function p(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>t});var r=n(67294);const o={},i=r.createContext(o);function t(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);